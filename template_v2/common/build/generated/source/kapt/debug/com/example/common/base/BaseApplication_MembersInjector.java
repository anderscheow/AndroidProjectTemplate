// Generated by Dagger (https://dagger.dev).
package com.example.common.base;

import androidx.work.WorkManager;
import dagger.Lazy;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.DoubleCheck;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BaseApplication_MembersInjector implements MembersInjector<BaseApplication> {
  private final Provider<WorkManager> workManagerProvider;

  public BaseApplication_MembersInjector(Provider<WorkManager> workManagerProvider) {
    this.workManagerProvider = workManagerProvider;
  }

  public static MembersInjector<BaseApplication> create(Provider<WorkManager> workManagerProvider) {
    return new BaseApplication_MembersInjector(workManagerProvider);
  }

  @Override
  public void injectMembers(BaseApplication instance) {
    injectWorkManager(instance, DoubleCheck.lazy(workManagerProvider));
  }

  @InjectedFieldSignature("com.example.common.base.BaseApplication.workManager")
  public static void injectWorkManager(BaseApplication instance, Lazy<WorkManager> workManager) {
    instance.workManager = workManager;
  }
}
