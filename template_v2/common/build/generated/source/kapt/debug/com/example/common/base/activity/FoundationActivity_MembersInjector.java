// Generated by Dagger (https://dagger.dev).
package com.example.common.base.activity;

import com.example.common.repository.auth_repository.IAuthRepository;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class FoundationActivity_MembersInjector implements MembersInjector<FoundationActivity> {
  private final Provider<IAuthRepository> authRepositoryProvider;

  public FoundationActivity_MembersInjector(Provider<IAuthRepository> authRepositoryProvider) {
    this.authRepositoryProvider = authRepositoryProvider;
  }

  public static MembersInjector<FoundationActivity> create(
      Provider<IAuthRepository> authRepositoryProvider) {
    return new FoundationActivity_MembersInjector(authRepositoryProvider);
  }

  @Override
  public void injectMembers(FoundationActivity instance) {
    injectAuthRepository(instance, authRepositoryProvider.get());
  }

  @InjectedFieldSignature("com.example.common.base.activity.FoundationActivity.authRepository")
  public static void injectAuthRepository(FoundationActivity instance,
      IAuthRepository authRepository) {
    instance.authRepository = authRepository;
  }
}
