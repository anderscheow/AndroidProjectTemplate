// Generated by Dagger (https://dagger.dev).
package com.example.common.viewmodel;

import com.example.common.repository.auth_repository.IAuthRepository;
import com.example.common.repository.system_repository.ISystemRepository;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BaseAndroidViewModel_MembersInjector<Args> implements MembersInjector<BaseAndroidViewModel<Args>> {
  private final Provider<ISystemRepository> systemRepositoryProvider;

  private final Provider<IAuthRepository> authRepositoryProvider;

  public BaseAndroidViewModel_MembersInjector(Provider<ISystemRepository> systemRepositoryProvider,
      Provider<IAuthRepository> authRepositoryProvider) {
    this.systemRepositoryProvider = systemRepositoryProvider;
    this.authRepositoryProvider = authRepositoryProvider;
  }

  public static <Args> MembersInjector<BaseAndroidViewModel<Args>> create(
      Provider<ISystemRepository> systemRepositoryProvider,
      Provider<IAuthRepository> authRepositoryProvider) {
    return new BaseAndroidViewModel_MembersInjector<Args>(systemRepositoryProvider, authRepositoryProvider);
  }

  @Override
  public void injectMembers(BaseAndroidViewModel<Args> instance) {
    injectSystemRepository(instance, systemRepositoryProvider.get());
    injectAuthRepository(instance, authRepositoryProvider.get());
  }

  @InjectedFieldSignature("com.example.common.viewmodel.BaseAndroidViewModel.systemRepository")
  public static <Args> void injectSystemRepository(BaseAndroidViewModel<Args> instance,
      ISystemRepository systemRepository) {
    instance.systemRepository = systemRepository;
  }

  @InjectedFieldSignature("com.example.common.viewmodel.BaseAndroidViewModel.authRepository")
  public static <Args> void injectAuthRepository(BaseAndroidViewModel<Args> instance,
      IAuthRepository authRepository) {
    instance.authRepository = authRepository;
  }
}
